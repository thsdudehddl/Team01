<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"	
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">		
	<!-- 
		SpringWebMVC 설정 외에 추가적으로 필요한 DBCP 설정, MyBatis 설정
		메시지 자원 설정, 추가적인 스프링 Bean을 등록하는 설정파일
	
		DBCP 정보를 properties 파일로부터 읽어서 DataSource를 구하는 설정
		파일을 import 태그를 사용해 현재 Bean 설정 파일에 포함시킬 수 있다.
	-->
	<import resource="classpath:datasource/dbcpdatasource.xml" />
	
	<!--  
		스프링 Bean 설정 파일인 root-context.xml 파일에 
		SqlSessionFactory 생성을 위한 SqlSessionFactoryBean을 Spring Bean으로 정의
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--
			DBCP를 사용하기 위한 DataSource를 참조 한다.
		-->
		<property name="dataSource" ref="dataSource" />				
		<!--
			MyBatis가 동작하면 Mapper를 인식해야 정상적인 DB 작업을 할 수 있다.
			아래와 같이 SqlSessionFactory의 mapperLocations 프로퍼티로
			지정할 수 있다. 아래와 같이 지정하면 "repository/mappers/"를 포함한
			하부 폴더의 "*Mapper.xml"로 끝나는 파일을 Mapper로 인식하게 된다.
		-->
		<property name="mapperLocations" 
			value="classpath:repository/mappers/**/*Mapper.xml" />		
		<!-- 
			typeAliasesPackage 속성은 Mapper 설정에서 타입 별칭을 사용할
			클래스가 위치한 패키지를 지정하는데 사용한다. 이 속성에 지정한
			패키지를 자동으로 검색해 클래스 이름으로 타입 별칭을 사용할 수 있도록
			해 준다. 아래와 같이 typeAliasesPackage를 지정하면 value에 지정한
			패키지를 포함한 하부 패키지의 모든 클래스를 완전한 클래스 이름이 아닌 
			클래스 이름만 지정하여 사용할 수 있도록 해 준다. 만약 이를 설정하지 않으면
			Mapper 설정에서 타입을 지정할 때 패키지를 포함한 완전한 클래스 이름으로
			지정해야 한다.			
		-->		
		<property name="typeAliasesPackage" value="com.springstudy.visualization.domain" />	
	</bean>
	
	<!-- 
		스프링 Bean 설정 파일인 root-context.xml 파일에
		DAO에서 의존하는 SqlSessionTemplate을 Spring Bean으로 정의
				
		mybatis-spring 모듈은 MyBatis의 SqlSession 기능과 스프링 DB 지원 기능을
		연동해 주는 SqlSessionTemplate 클래스를 제공한다. SqlSessionTemplate은
		SqlSession을 구현해 스프링과 연동하는 기능을 구현했기 때문에 우리가 만드는
		DAO에서 SqlSessionTemplate 객체를 사용해 SqlSession에 정의된 메서드를
		사용할 수 있다.
		
		SqlSessionTemplate은 SqlSessionFactoryBean을 사용해
		DB 접속해 작업하기 때문에 아래와 같이 생성자로 주입 받도록 설정하면 된다.
	-->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		c:sqlSessionFactory-ref="sqlSessionFactory" /> 	
</beans>
